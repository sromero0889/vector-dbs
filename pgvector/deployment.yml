apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgvector-pv
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/mms_app/pgvector"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgvector-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgvector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgvector
  template:
    metadata:
      name: pgvector
      labels:
        app: pgvector
    spec:
      volumes:
        - name: pgvector-pv
          persistentVolumeClaim:
            claimName: pgvector-pvc

      containers:
        - name: pgvector
          image: pgvector/pgvector:pg16
          imagePullPolicy: IfNotPresent
          startupProbe:
            exec:
              command: [ "/bin/sh", "-c", "pg_isready && PGPASSWORD=${POSTGRES_PASSWORD} /bin/psql -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p 5432 -c 'CREATE EXTENSION IF NOT EXISTS vector;' > /usr/share/postStart.log" ]
          readinessProbe:
            exec:
              command: [ "pg_isready" ]
            timeoutSeconds: 2
            failureThreshold: 3
            periodSeconds: 30
          envFrom:
            - secretRef:
                name: pgvector-secrets
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: pgvector-pv
              mountPath: "/var/lib/mms_app/pgvector"